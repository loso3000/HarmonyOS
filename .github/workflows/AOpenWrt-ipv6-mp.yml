
#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#

name: AOpenWrt-ipv6-mp

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      branch:
        description: '选择仓库的分支：'
        default: 'master'
        required: true
        type: choice
        options: [ openwrt-21.02, master, stable,  openwrt-23.05 ]
      config_s:
        description: '配置文件'
        default: 'Vip-Mini'
        required: true
        type: choice
        options: [ Free-Super, Free-Mini, Free-Plus, Vip-Super,Vip-Bypass,Vip-Mini, Vip-Plus ]
      cpu_s:
        description: 'CPU优选'
        required: true
        default: '8'
        type: choice
        options:
          - '8'
          - '8370C'
          - '8272CL'
          - '8171M'
      target:
        description: '选择要生成的机型：'
        default: 'x86_64'
        required: true
        type: choice
        options: [ x86_64, rm2100, xm2100, r2s, r4s, r4se, r5s, r5c ]
      date_s:
        description: '固件日期'
        default: 'default'
        required: false
env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  # REPO_URL: https://github.com/DHDAXCW/lede-rockchip
  #REPO_BRANCH: openwrt-21.02
  FEEDS_CONF: feeds.conf.default
  DIY_P1_SH: diy/diyv
  APT: apt
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: false
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai
jobs:
  Build:
    runs-on: ubuntu-22.04
    if: github.event.repository.owner.id == github.event.sender.id
    name: lede-${{github.event.inputs.config_s}}-${{github.event.inputs.target}}-${{github.event.inputs.branch}}-${{github.event.inputs.date_s}}
    env:
      CONFIG_S: ${{github.event.inputs.config_s}}
      CPU_S: ${{github.event.inputs.cpu_s}}
      DATE_S: ${{github.event.inputs.date_s}}
      TARGET_DEVICE: ${{github.event.inputs.target}}
      REPO_BRANCH: ${{github.event.inputs.branch}}


    steps:
    - name: Show system
      run: |
        echo -e "Total CPU cores\t: $(nproc)"
        cat /proc/cpuinfo | grep 'model name'
        cpu_name=$(cat /proc/cpuinfo | grep "model name" | head -n 1 | awk -F: '{print $2}' | sed 's/^[ \t]*//')
        if [[ "$cpu_name" =~ "8370C" || "$cpu_name" =~ "7763" ]]; then
          echo "CPU为8370C或7763，继续执行命令"
          ulimit -a
        else
          echo "CPU不为8370C或7763，性能不足，停止执行命令"
          # exit 1
        fi
    - name: Maximize build space
      uses: easimon/maximize-build-space@master
      with:
        swap-size-mb: 512
        temp-reserve-mb: 128
        root-reserve-mb: 3072
        remove-dotnet: 'true'
        remove-android: 'true'
        remove-haskell: 'true'
        remove-codeql: 'true'

    - name: Checkout
      uses: actions/checkout@main
    - name: Init build dependencies
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo swapoff -a
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install aria2
        sudo -E wget -P /usr/local/sbin/ https://github.com/HiGarfield/lede-17.01.4-Mod/raw/master/.github/backup/apt-fast
        sudo -E chmod -R 755 /usr/local/sbin/apt-fast
        sudo -E apt-fast -y -qq install dwarves quilt llvm clang lldb lld build-essential rsync asciidoc binutils bzip2 gawk gettext git libncurses5-dev patch python2.7 unzip zlib1g-dev lib32gcc-s1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib p7zip-full msmtp libssl-dev texinfo libreadline-dev libglib2.0-dev xmlto qemu-utils upx-ucl libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget ccache curl swig coreutils vim nano python3 python3-dev python3-pip python3-ply python3-pyelftools lrzsz scons
        pip3 install --user -U pylibfdt
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo -E git config --global user.name 'GitHub Actions' && git config --global user.email 'noreply@github.com'
        sudo -E git config --global core.abbrev auto
        df -h
        
        sudo -E timedatectl set-timezone "Asia/Shanghai"
        sudo mkdir -p /mnt/workdir
        sudo chown $USER:$GROUPS /mnt/workdir
         # sudo chown -R runner:runner/mnt/workdir
    - name: Clone source code
      working-directory: /mnt/workdir
      run: |
        df -hT $PWD
        if [[ $REPO_BRANCH == 'stable' ]]; then
          git clone --depth 1 https://github.com/DHDAXCW/lede-rockchip -b $REPO_BRANCH openwrt
        else 
          git clone --depth 1 https://github.com/coolsnowwolf/lede -b $REPO_BRANCH  openwrt
        fi
          ln -sf /mnt/workdir/openwrt $GITHUB_WORKSPACE/openwrt
        if [[ $DATE_S == 'default' ]]; then
          echo "DATA=`date +%Y%m%d_%H -d +"12"hour`" >> $GITHUB_ENV
        else 
          echo "DATA=$DATE_S" >>$GITHUB_ENV
        fi
    - name: Cache
      uses: klever1988/cachewrtbuild@main
      with:
       ccache: 'true'
       mixkey: 'x86_64'
       clean:  'false'  # 'false'
       prefix: ${{ github.workspace }}/openwrt

    - name: Update feeds
      run: | 
          cd openwrt
          ./scripts/feeds update -a
          ./scripts/feeds install -a
    - name: Update package
      run: |
         [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
         chmod +x ${DIY_P1_SH}
         cd openwrt
         $GITHUB_WORKSPACE/$DIY_P1_SH
         chmod -R 755 .
    - name:  Download packages
      run: |
        cd openwrt
        cat  $GITHUB_WORKSPACE/config/${CONFIG_S}  > .config
        #cat  $GITHUB_WORKSPACE/config/comm  >> .config
        echo -e 'CONFIG_DEVEL=y\nCONFIG_CCACHE=y' >> .config #Cache.Speedup
        make defconfig
        make download -j50
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        df -h

    - name: Compile Openwrt
      id: compileopenwrt
      # continue-on-error: true
      run: |
        cd openwrt
        df -hT

        echo -e "$(nproc) thread compile"
        make tools/compile -j$(nproc) || make tools/compile -j$(nproc)
        make toolchain/compile -j$(nproc) || make toolchain/compile -j$(nproc)
        make target/compile -j$(nproc) || make target/compile -j$(nproc) IGNORE_ERRORS=1
        make diffconfig
        make package/compile -j$(nproc) IGNORE_ERRORS=1 || make package/compile -j$(nproc) IGNORE_ERRORS=1
        make package/index
        ls   ./targets/x86/64

         #rm -rf ./targets/x86/64/*x86-64-combined*
         bash  bakkmod.sh
         #make package/install -j$(nproc) || make package/install -j1 V=s
         #make target/install -j$(nproc) || make target/install -j1 V=s
         #make json_overview_image_info
         #make checksum
        df -h
         bash buildmd5.sh
    - name: Organize files
      run: |
        cd openwrt/bin/targets/*/*
        ls
        echo "======================="
        df -hT
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT
    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: ${{ env.DATA }}-EzOpWrt-Ipv6-${{env.CONFIG_S}}-${{env.TARGET_DEVICE}}-${{env.REPO_BRANCH}}-${{env.TARGET_DEVICE}}-Firmware
        path: ${{ env.FIRMWARE }}

    - name: Upload bin directory
      uses: actions/upload-artifact@main
      with:
        name: ${{ env.DATA }}-EzOpWrt-Ipv6-${{ env.CONFIG_S }}-${{env.TARGET_DEVICE}}-${{env.REPO_BRANCH}}-${{env.TARGET_DEVICE}}-ipk
        path: ./openwrt/bin/packages/
   

    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN}}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*

    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@v2
      with:
          retain_days: 1
          keep_minimum_runs: 1

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.2.1
      with:
          keep_latest: 1
          delete_tags: true
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Delete Artifacts
      uses: geekyeggo/delete-artifact@v2
      with:
         name: |
            bin-archive
