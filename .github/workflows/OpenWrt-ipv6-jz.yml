name: OpenWrt-ipv6-jz

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
#  watch:
#    types: started
#  schedule:
#    - cron: 0 21 */7 * * 

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: script/jz.config
  DIY_P1_SH: script/jz.sh
  DIY_P2_SH: script/clash-core.sh

jobs:

  build_openwrt:

    name: OpenWrt_Build 

    runs-on: ubuntu-latest

    if: github.event.repository.owner.id == github.event.sender.id

    steps:

      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master
      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-2004)
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo timedatectl set-timezone "Asia/Shanghai"
      - name: Clone Source Code
        run: |
         df -hT $PWD
          git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
      - name: Cache
        uses: klever1988/cachewrtbuild@main
        with:
          ccache: 'true'
          prefix: ${{ github.workspace }}/openwrt
          clean: 'true'
      - name: Update feeds
        run: |
          cd openwrt
          git clone https://github.com/sirpdboy/sirpdboy-package ./package/diy
          echo "DATA=$(date +'%Y-%m-%d'-d +"12"hour) \n" >> $GITHUB_ENV
          ./scripts/feeds update -a
          ./scripts/feeds install -a
      - name: Update package
        run: |
         [ -e $CONFIG_FILE ] && mv $CONFIG_FILE ./openwrt/.config
         chmod +x ./$DIY_P1_SH
         chmod +x ./$DIY_P2_SH
         cd openwrt
         ../$DIY_P1_SH
      - name: Install Feeds
        run: |
            cd openwrt
            ../$DIY_P2_SH amd64
            ./scripts/feeds install -a
            chmod -R 755 .
      - name: Generate configuration file
        run: |
          cd openwrt
          make defconfig
      - name: Make download
        run: |
          cd openwrt
          make download -j8
          find dl -size -1024c -exec rm -f {} \;
      - name: Compile firmware
        id: compileopenwrt
        continue-on-error: true
        run: |
         df -h
         cd openwrt
         make -j$(($(nproc) + 1)) || make -j$(($(nproc) + 1)) V=s
         echo $?
      - name: If Error
        if: steps.compileopenwrt.outcome == 'failure'
        run: |
          cat openwrt/.config
          echo '================================================================'
          cd openwrt && make -j1 V=s
          
          echo $?
      - name: Prepare Artifact
        run: |
          mkdir -p ./jz/firmware
          mkdir -p ./jz/package
          cp -rf $(find ./openwrt/bin/ -type f -name "*.ipk") ./jz/package
          find ./openwrt/bin/targets/ -name "*squashfs*img*"| xargs -i mv -f {} ./jz/firmware
          cd ./jz/firmware
          gzip *.img || true
          echo -e "Sirpdboy-IPV6-Super-${{ env.DATA}}极致通用版--【efi通用不区分引导方式】\n" > 版本日期和MD5信息.txt
          echo -e "【固件插件说明与各版本下载链接】：https://github.com/sirpdboy/openwrt/ \n" >> 版本日期和MD5信息.txt
          echo -e "MD5: \n" >> 版本日期和MD5信息.txt
          md5sum *img* >> 版本日期和MD5信息.txt

      - name: Upload Firmware
        uses: actions/upload-artifact@main
        with:
          name: OpenWrt-ipv6-Super-Firmware
          path: ./jz/firmware
      - name: Upload  IPK
        uses: actions/upload-artifact@main
        with:
          name: OpenWrt-ipv6-Super-Ipk
          path: ./jz/package
      #- name: Upload firmware to cowtransfer
      #  run: |
      #  curl -fsSL git.io/file-transfer | sh
      #   ./transfer cow --block 2621440 -s -p 64 --no-progress ./jz/firmware 2>&1 | tee cowtransfer.log
      #   echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
      - name: Upload Firmware wetransfer
        run: |
          curl -fsSL git.io/file-transfer | sh
          ./transfer wet -s -p 16 --no-progress ./jz/firmware 2>&1 | tee wetransfer.log
          echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
