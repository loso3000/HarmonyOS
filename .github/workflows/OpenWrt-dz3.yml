name: OpenWrt-dz3

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
#  watch:
#    types: started
#  schedule:
#    - cron: 0 21 */7 * * 
env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: script/dz3.lean
  DIY_P1_SH: script/dz3.sh
  DIY_P2_SH: script/clash-core.sh

jobs:

  build_openwrt:

    name: OpenWrt_Build 

    runs-on: ubuntu-latest

    if: github.event.repository.owner.id == github.event.sender.id

    steps:

      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master
      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* adoptopenjdk* mysql* php* mongodb* dotnet* moby* snapd* || true
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          df -h
          sudo timedatectl set-timezone "Asia/Shanghai"
      - name: Update feeds
        run: |
          git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
          cd openwrt
          #sed -i 's/#src-git helloworld/src-git helloworld/g' ./feeds.conf.default
          #sed -i 's/coolsnowwolf/sirpdboy/g' ./feeds.conf.default
          git clone https://github.com/sirpdboy/sirpdboy-package ./package/diy
          echo "DATA=$(date +'%y%m%d')" >> $GITHUB_ENV
          ./scripts/feeds update -a
          ./scripts/feeds install -a
      - name: Update package
        run: |
         [ -e $CONFIG_FILE ] && mv $CONFIG_FILE ./openwrt/.config
         chmod +x ./$DIY_P1_SH
         chmod +x ./$DIY_P2_SH
         cd openwrt
         ../$DIY_P1_SH
         ../$DIY_P2_SH amd64
         chmod -R 755 .
      
      - name: Generate configuration file
        working-directory: ./openwrt
        run: |
          make defconfig
      - name: Make download
        working-directory: ./openwrt
        run: |
          make download -j8
          find dl -size -1024c -exec rm -f {} \;
             
      - name: Compile Packages
        id: compile
        run: |
         df -h
         cd openwrt
         echo -e "$(nproc) thread compile"
         make tools/compile -j$(nproc) || make tools/compile -j72
         make toolchain/compile -j$(nproc) || make toolchain/compile -j72
         make target/compile -j$(nproc) || make target/compile -j72 IGNORE_ERRORS=1
         make diffconfig
         make package/compile -j$(nproc) IGNORE_ERRORS=1 || make package/compile -j72 IGNORE_ERRORS=1
         make package/index
         echo "::set-output name=COMPILE_STATUS::success"
        
      - name: Generate Firmware
        if: steps.compile.outputs.COMPILE_STATUS == 'success'
        id: generate
        run: |
         df -h
         cd openwrt 
         mkdir -p files/etc/uci-defaults/
         cp ../scriptx/init-settings.sh files/etc/uci-defaults/99-init-settings
         make package/install -j$(nproc) || make package/install -j1 V=s
         make target/install -j$(nproc) || make target/install -j1 V=s
         make checksum
      - name: Prepare Artifact
        run: |
          mkdir -p ./mini/firmware3
          mkdir -p ./mini/package3
          cp -rf $(find ./openwrt/bin/ -type f -name "*.ipk") ./mini/package3
          find ./openwrt/bin/targets/ -name "*combined*img" | xargs -i mv -f {} ./mini/firmware3
          cd ./mini/firmware3
          gzip *.img || true

      # - name: Upload Firmware wetransfer
      #   run: |
      #     curl -fsSL git.io/file-transfer | sh
       #    ./transfer wet -s -p 16 --no-progress ./mini/firmware3 2>&1 | tee wetransfer.log
        #   echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
          
      - name: Upload Firmware
        uses: actions/upload-artifact@main
        with:
          name: OpenWrt-ipv6-dz3-Firmware
          path: ./mini/firmware3
      - name: Upload  IPK
        uses: actions/upload-artifact@main
        with:
          name: OpenWrt-ipv6-dz3-Ipk
          path: ./mini/package3
      - name: Delete workflow runs
        uses: GitRML/delete-workflow-runs@main
        with:
          retain_days: 14
          keep_minimum_runs: 3
