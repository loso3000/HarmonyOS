
name: BOpenWrt-ipv6-all


on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
  watch:
    types: started
#  schedule:
#    - cron: 0 21 */7 * * 

env:
  #REPO_URL: https://github.com/DHDAXCW/lede-rockchip
  #  https://github.com/loso3000/immortalwrt-1.git
  #REPO_BRANCH: stable
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: script/ballappdrv.config
  DIY_P1_SH: script/binitipv6-l.sh
  DIY_P2_SH: script/clash-core.sh
  
  TZ: Asia/Shanghai


jobs:
  build:
    name: Build OpenWrt firmware
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Check server performance
        run: |
         echo "警告⚠"
         echo "若分配的服务器性能不足，务必及时取消，重新运行！"
         echo "已知编译成功CPU型号：8370C,8171M"
         echo "已知性能不足CPU型号：8272CL E5-2673"
         echo -e "-------------- ------------CPU信息------------------------------------------\n"
         echo "CPU物理数量:$(cat /proc/cpuinfo| grep "physical id"| sort| uniq| wc -l)"
         echo -e "CPU核心及版本信息：$(cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c) \n"
         echo "-------------------------------内存信息-------------------------------------------"
         echo "已安装内存详细信息："
         sudo lshw -short -C memory | grep GiB
         echo -e "\n"
         echo "-----------------------------硬盘信息---------------------------------------------"
         echo -e  "硬盘数量：$(ls /dev/sd* | grep -v [1-9] | wc -l) \n"
         echo "硬盘详情："
         df -Th
         
         if grep  "8370" "/proc/cpuinfo" ; then
          echo "CPU YES！！！"
          echo "CKCPU=success" >> $GITHUB_ENV
         else
             echo "CPU NO！！！"
             echo "CKCPU=failure" >> $GITHUB_ENV
             exit 1
         fi
         

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi $(docker images -q)
          sudo -E rm -rf $(cat $GITHUB_WORKSPACE/Depends.txt | sed -n "1{s/\r$//;p;q}")
          sudo -E apt -yqq update
          sudo -E apt -yqq purge $(cat $GITHUB_WORKSPACE/Depends.txt | sed -n "2{s/\r$//;p;q}")
          sudo -E apt -yqq full-upgrade
          sudo -E apt -yqq install $(cat $GITHUB_WORKSPACE/Depends.txt | sed -n "3{s/\r$//;p;q}")
          sudo -E apt -yqq autoremove --purge
          sudo -E apt -yqq autoclean
          sudo -E apt -yqq clean
          sudo -E systemctl daemon-reload
          sudo timedatectl set-timezone "Asia/Shanghai"
          #sudo mkdir -p /workdir
          #sudo chown $USER:$GROUPS /workdir
      - name: git lede
        #working-directory: /workdir
        run: |
          df -hT $PWD
          git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
          #ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
          ls

      - name: Cache
        uses: klever1988/cachewrtbuild@main
        with:
          ccache: 'true'
          clean:  'false'  # 'false'
          prefix: ${{ github.workspace }}/openwrt
      - name: Update feeds
        run: | 
          cd openwrt
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          df -h
      - name: Update package
        run: |
        
         [ -e $CONFIG_FILE ] && mv $CONFIG_FILE ./openwrt/.config
         
          df -h
         chmod +x ./$DIY_P1_SH
         chmod +x ./$DIY_P2_SH
          echo "FIRMWARE=$PWD" >> $GITHUB_ENV
          echo "DATA=`date +%Y%m%d_%H -d +"12"hour`" >> $GITHUB_ENV
          echo "${{ env.FIRMWARE }} =----= ${{ env.DATA }}"
         
         cd openwrt
         $GITHUB_WORKSPACE/$DIY_P1_SH
         $GITHUB_WORKSPACE/$DIY_P2_SH amd64
         chmod -R 755 .
         
      - name: Generate configuration file

        run: |
         cd openwrt
          make defconfig
          
          df -h
      - name: Make download
        working-directory: ./openwrt
        run: |
        
          df -h
          make download -j8
          find dl -size -1024c -exec rm -f {} \;
          df -h
               
      - name: Compile Packages
        id: compile
        run: |
         df -h
         cd openwrt
         echo -e "$(nproc) thread compile"
         make tools/compile -j$(nproc) || make tools/compile -j72
         make toolchain/compile -j$(nproc) || make toolchain/compile -j72
         make target/compile -j$(nproc) || make target/compile -j72 IGNORE_ERRORS=1
         make diffconfig
         make package/compile -j$(nproc) IGNORE_ERRORS=1 || make package/compile -j72 IGNORE_ERRORS=1
         make package/index
      - name: Generate Firmware
        run: |
         df -h
         cd openwrt
         rm -rf dl
         mkdir -p files/etc/uci-defaults/
         cp $GITHUB_WORKSPACE/scriptx/init-settings.sh files/etc/uci-defaults/99-init-settings
         make package/install -j$(nproc) || make package/install -j1 V=s
         make target/install -j$(nproc) || make target/install -j1 V=s
         make checksum
          echo $?

      - name: Prepare Artifact
        run: |
          mkdir -p ./firmware
          mkdir -p ./package
          df -h
          find ./openwrt/bin/ -name "*.ipk" | xargs -i mv -f {}  ./package
          find ./openwrt/bin/targets/ -name "*combined-efi.img*"  | xargs -i mv -f {}  ./firmware
          echo -e "SirpdboyOpenWrt-Ipv6-Plus-${{ env.DATA }}-大全版--【efi通用不区分引导方式】\n" > 版本日期和MD5信息.txt
          echo -e "【固件插件说明与各版本下载链接】：https://github.com/sirpdboy/openwrt/ \n"  >> 版本日期和MD5信息.txt
          echo -e "MD5: \n" >> 版本日期和MD5信息.txt
          md5sum *img* >> 版本日期和MD5信息.txt | true

      - name: Upload Firmware
        uses: actions/upload-artifact@main
        with:
          name: ${{ env.DATA }}-SirpdboyOpenWrt-Ipv6-Plus-Firmware
          path: ./firmware
      - name: Upload  IPK
        uses: actions/upload-artifact@main
        with:
          name: ${{ env.DATA }}-SirpdboyOpenWrt-Ipv6-Plus-Ipk
          path: ./package
          
