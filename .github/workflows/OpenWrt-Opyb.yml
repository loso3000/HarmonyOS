#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#

name: OpenWrt-Opyb

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'

env:
  REPO_URL: https://github.com/openwrt/openwrt
  REPO_BRANCH: openwrt-19.07
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: script/opyb
  DIY_P1_SH: script/opyb.sh
  DIY_P2_SH: script/opyb.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: false
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E swapoff -a
        sudo -E rm -f /swapfile
        sudo -E docker image prune -a -f
        sudo -E snap set system refresh.retain=2
        sudo -E apt-get -y purge azure* dotnet* firefox ghc* google* hhvm llvm* mono* mysql* openjdk* php* zulu*
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean
        sudo -E rm -rf /usr/share/dotnet /usr/local/lib/android/sdk /etc/mysql /etc/php /usr/local/share/boost
        [ -n "$AGENT_TOOLSDIRECTORY" ] && sudo rm -rf "$AGENT_TOOLSDIRECTORY"
        df -h
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
    - name: Load custom feeds
      run: |
        # [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        # chmod +x $DIY_P1_SH
        # cd openwrt
        # $GITHUB_WORKSPACE/$DIY_P1_SH
    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
         chmod +x ./$DIY_P1_SH
         cd openwrt
         ../$DIY_P1_SH
         chmod -R 755 .
    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "::set-output name=status::success"
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
    - name: Prepare Artifact
      run: |
          mkdir -p ./op/firmware
          mkdir -p ./op/package
          cp -rf $(find ./openwrt/bin/ -type f -name "*.ipk") ./op/package
          find ./openwrt/bin/targets/ -name "*combined*img" | xargs -i mv -f {} ./op/firmware
          cd ./op/firmware
          gzip *.img
          echo -e "Sirpdboy-IPV6-MINI-op-${{ env.DATA}}精简通用版--【通用不区分引导方式】\n" > 版本日期和MD5信息.txt
          echo -e "【固件插件说明与各版本下载链接】：https://github.com/sirpdboy/openwrt18.06/ \n" > 版本日期和MD5信息.txt
          echo -e "MD5: \n" >> 版本日期和MD5信息.txt
          md5sum *img* >> 版本日期和MD5信息.txt
    - name: Upload Firmware
      uses: actions/upload-artifact@main
      with:
          name: SirpdboyOpenWrt-ipv6-mini-op-Firmware
          path: ./op/firmware
    - name: Upload  IPK
      uses: actions/upload-artifact@main
      with:
          name: SirpdboyOpenWrt-ipv6-mini-op-Ipk
          path: ./op/package
    - name: Upload Firmware wetransfer
      run: |
          curl -fsSL git.io/file-transfer | sh
          ./transfer wet -s -p 16 --no-progress ./op/firmware 2>&1 | tee wetransfer.log
          echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
          
    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
          retain_days: 7
          keep_minimum_runs: 3
